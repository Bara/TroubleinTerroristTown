name: Compile with SourceMod

on:
  push:
    branches: master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        SM_VERSION: ["1.10", "1.11"]

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt install curl p7zip-full p7zip-rar

      - name: Set environment variables
        run: |
          git fetch --unshallow
          VERSION=$(git rev-list --count HEAD)
          SHORT=$(git describe --always --long --dirty)
          SOURCEMOD_PATH=$GITHUB_WORKSPACE/addons/sourcemod
          echo ::set-env name=GIT_COMMIT::$VERSION
          echo ::set-env name=PLUGIN_VERSION::${{ matrix.SM_VERSION }}.$VERSION.$SHORT
          echo ::set-env name=SOURCEMOD_PATH::$SOURCEMOD_PATH
          echo ::set-env name=SCRIPTS_PATH::$SOURCEMOD_PATH/scripting
          echo ::set-env name=PLUGINS_PATH::$SOURCEMOD_PATH/plugins

      - name: Setup SourcePawn Compiler ${{ matrix.SM_VERSION }}
        uses: rumblefrog/setup-sp@master
        with:
          version: ${{ matrix.SM_VERSION }}

      - name: Set TTT version
        run: |
          sed -i "s/<VERSION>/$PLUGIN_VERSION/g" $SCRIPTS_PATH/include/ttt_stock.inc
      
      - name: Generate colorlib.inc
        run: python3 ./color_gen.py -r --config "./ttt_colors.yaml" "../addons/sourcemod/scripting/include/colorlib_map.inc"
        working-directory: ./tools

      - name: Compile TTT
        run: |
          for file in *.sp
          do
            echo -e "\nCompiling $file..."
            spcomp -E -w234 -O2 -v2 -i $SCRIPTS_PATH/include $file
          done
        working-directory: ${{ env.SCRIPTS_PATH }}/ttt

      - name: Compile 3rd party plugins
        run: |
          for plugin in "block_messages" "customkeyvalues" "discord_api" "no_weapon_fix" "turret_core"
          do
            echo -e "\nCompiling $plugin.sp..."
            spcomp -E -w234 -O2 -v2 -i $SCRIPTS_PATH/include $plugin.sp
          done
        working-directory: ${{ env.SCRIPTS_PATH }}/

      - name: Move compiled plugins
        run: |
          rm -rf $PLUGINS_PATH
          mkdir -p $PLUGINS_PATH/{ttt,disabled}
          rsync -av --include='*/' --include="*.smx" --exclude="*" --prune-empty-dirs --remove-source-files $SCRIPTS_PATH/ $PLUGINS_PATH/

      - name: Disable optional plugins
        run: |
          mv $SCRIPTS_PATH/README.md $PLUGINS_PATH/disabled
          mv $PLUGINS_PATH/ttt/ttt_{discord,dronescameras,futuristicgrenades,parachute,tactical_shield}.smx $PLUGINS_PATH/disabled

      - name: Move folders (addons, materials, models, particles, sound) to build
        run: |
          mkdir build
          mv ./{addons,materials,models,particles,sound} build/

      - name: Add LICENSE, CREDITS.md, CVARS.txt and adminmenu_custom.txt to build package
        run: |
          mv $GITHUB_WORKSPACE/{LICENSE,CREDITS.md,CVARS.txt,adminmenu_custom.txt} .
        working-directory: ./build

      - name: Remove unnecessary files and folders from build
        run: |
          rm -rf addons/sourcemod/scripting
          rm -rf addons/sourcemod/configs/{*.cfg,*.ini}
        working-directory: ./build

      - name: Download SteamWorks and DHooks
        run: |
          wget http://users.alliedmods.net/~kyles/builds/SteamWorks/SteamWorks-git131-linux.tar.gz -O steamworks_linux.tar.gz
          wget http://users.alliedmods.net/~kyles/builds/SteamWorks/SteamWorks-git131-windows.zip -O steamworks_windows.zip
          curl -s "https://forums.alliedmods.net/attachment.php?attachmentid=181704&d=1590662656" -o dhooks.zip

      - name: Unpacking SteamWorks and DHooks
        run: |
          tar xfv steamworks_linux.tar.gz
          unzip -o steamworks_windows.zip
          unzip dhooks.zip
      
      - name: Move SteamWorks and DHooks files
        run: |
          mkdir -p build/addons/sourcemod/extensions/
          cp addons/sourcemod/extensions/SteamWorks.ext.so build/addons/sourcemod/extensions/
          cp addons/sourcemod/extensions/SteamWorks.ext.dll build/addons/sourcemod/extensions/
          cp addons/sourcemod/extensions/dhooks.ext.so build/addons/sourcemod/extensions/
          cp addons/sourcemod/extensions/dhooks.ext.dll build/addons/sourcemod/extensions/

      - name: Compress package
        run: zip -9rq TTT.${{ env.PLUGIN_VERSION }}.zip addons materials models particles sound CREDITS.md LICENSE CVARS.txt adminmenu_custom.txt
        working-directory: ./build

      - name: Upload package
        run: curl -T TTT.${{ env.PLUGIN_VERSION }}.zip -u ${{ secrets.FTP_NAME }}:${{ secrets.FTP_PASS }} ftp://${{ secrets.FTP_HOST }}:${{ secrets.FTP_PORT }}/downloads/
        working-directory: ./build
      
      - name: Upload latest package
        run: |
          mv TTT.${{ env.PLUGIN_VERSION }}.zip TTT.latest.${{ matrix.SM_VERSION }}.zip
          curl -T TTT.latest.${{ matrix.SM_VERSION }}.zip -u ${{ secrets.FTP_NAME }}:${{ secrets.FTP_PASS }} ftp://${{ secrets.FTP_HOST }}:${{ secrets.FTP_PORT }}/downloads/
        working-directory: ./build

      - name: Update version
        run: |
          wget -q '${{ secrets.UPDATE_URL }}?version=${{ env.GIT_COMMIT }}&key=${{ secrets.UPDATE_KEY }}' -O version.log
          rm version.log
